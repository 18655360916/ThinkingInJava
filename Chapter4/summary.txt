第四章 控制执行流程

c语言中,对于整数a,if(a)在Java中要转换为if(a != 0).条件(布尔)表达式中的判断结果必须为boolean值,而不能是其他任何类型.

语句,总是包含简单语句(用分号结尾的单条语句)和复合语句(封闭在花括号内的一组简单语句).

迭代语句(iteration statement)会重复执行,直到布尔表达式为假才会退出迭代.

while和do-while唯一的区别就是do-while中的语句至少会执行一次,即便布尔表达式第一次就被计算为false,
而while迭代如果条件第一次为false,则语句根本不会被执行到.

for迭代由初始化(initialization),布尔表达式(Boolen-expression),步进(step)组成.都可以为空.常用于计数任务.

Java中可以在真正需要的地方才加以定义局部变量做到分散变量声明,如可以在for迭代内部块中定义新变量.

for语句内定义多个变量,但是他们必须有相同的类型,定义多个变量的能力只限于for循环适用.
无论在初始化部分还是步进部分,语句都是顺序执行的.

使用foreach迭代的前提是该对象实现了Iterable接口,即他是个Iterable对象.显然数组对象都是.
它说明你正在努力获取对象中的每一个元素,而不是给出你正在如何做的细节,例如创建索引.

返回void方法中没有return语句,那么在结尾处有一个隐式的return.
返回非void方法,那么确保每一条代码路径都将返回一个值,而不能是无返回值隐式的return.

无穷循环两种形式: while(true){} 和 for(;;){}

break和continue是中断当前迭代语句(for, while)的一种方法.
如果中断多级迭代,需要使用迭代标签,迭代标签是后面跟有冒号的标识符.标签只能放在迭代语句之前.
Java里需要使用标签的唯一理由就是因为有循环嵌套的存在,而且想从多层嵌套中break或continue;

break会中断for循环,而在抵达for循环的末尾之前,递增表达式不会执行.break会跳过递增表达式.

通过限制语句的能力,反而能使一项语言特性更加有用.

switch可以和enum协调工作,实现多路选择的一种干净利落的方法.
完全可以在default语句的末尾放置一个break,尽管它没有任何实际用处.

if-else存在优先级设计,各分支条件不要求严格独立互斥.
而switch-case多路分支是并行设计,各分支条件要求严格独立互斥.

case语句可以堆叠在一起形成一段代码的复用即多重匹配.如果不加break,控制流程会简单的下移,处理后面的case.

至此我们学习了大多数编程语言的基本特性,类型及其转换,操作符,分支和迭代.





